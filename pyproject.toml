[project]
name = "gia-api"
description = "GIA API"
readme = "README.md"
requires-python = ">=3.13"
dynamic = ["version"]

dependencies = [
  "beautifulsoup4==4.13.4",
  "brotlipy==0.7.0",
  "crispy-bootstrap3==2024.1",
  "dj-rest-auth==7.0.1",
  "django==5.2.1",
  "django-allauth==65.8.0",
  "django-bootstrap3==25.1",
  "django-brotli==0.3.0",
  "django-cacheops==7.2",
  "django-cors-headers==4.7.0",
  "django-crispy-forms==2.4",
  "django-decorator-include==3.3",
  "django-environ==0.12.0",
  "django-extensions==4.1",
  "django-filter==25.1",
  "django-minify-html==1.12.0",
  "django-prometheus==2.3.1",
  "django-redis==5.4.0",
  "django-tables2==2.7.5",
  "djangorestframework==3.16.0",
  "djangorestframework-filters==1.0.0.dev2",
  "djangorestframework-simplejwt==5.5.0",
  "djmail==2.0.0",
  "drf-extensions==0.8.0",
  "drf-spectacular==0.28.0",
  "gunicorn==23.0.0",
  "hiredis==3.1.1",
  "lxml==5.4.0",
  "minify-html==0.15.0",                           # https://github.com/wilsonzlin/minify-html/issues/225
  "openpyxl==3.1.5",
  "opentelemetry-exporter-otlp==1.33.0",
  "opentelemetry-instrumentation-django==0.54b0",
  "opentelemetry-instrumentation-psycopg==0.54b0",
  "opentelemetry-instrumentation-redis==0.54b0",
  "opentelemetry-sdk==1.33.0",
  "psycopg[binary]==3.2.7",
  "redis==6.0.0",
  "requests==2.32.3",
  "stamina==25.1.0",
  "whitenoise==6.9.0",
]

[dependency-groups]
dev = [
  "debugpy==1.8.14",
  "django-browser-reload==1.18.0",
  "django-debug-toolbar==5.2.0",
  "ipdb==0.13.13",
  "pre-commit==4.2.0",
  "pylint-django==2.6.1",
  "werkzeug[watchdog]==3.1.3",
]
test = [
  "coverage==7.8.0",
  "django-dynamic-fixture==4.0.1",
  "pytest==8.3.5",
  "pytest-cov==6.1.1",
  "pytest-django==4.11.1",
  "pytest-mock==3.14.0",
  "pytest-randomly==3.16.0",
  "pytest-responses==0.5.1",
  "pytest-sugar==1.0.0",
  "responses==0.25.7",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.test"
addopts = "-ra --cov=gia-api --cov-report term-missing:skip-covered"

[tool.coverage.run]
branch = true
# plugins = ["django_coverage_plugin"]
omit = [
  "*/config/*",
  "*/migrations/*",
  "*__init__.py",
  "*manage.py",
  "*apps.py",
]

[tool.coverage.report]
exclude_also = ["if __name__ == .__main__.:", "if TYPE_CHECKING:"]
precision = 2

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "E501",   # line length violations
  "D203",   # one-blank-line-before-class
  "D213",   # multi-line-summary-second-line
  "COM812", # missing-trailing-comma
  "RUF001", # ambiguous-unicode-character-string
  "D100",   # Missing docstring in public module
  "D102",   # Missing docstring in public method
  "D104",   # Missing docstring in public package
  "D105",   # Missing docstring in magic method
  "D106",   # Missing docstring in public nested class
  "D107",   # Missing docstring in `__init__`
  "ANN",    # annotations
  "ARG001", # unused arguments
  "ARG002", # unused arguments
  "RUF012", # mutable-class-default
  "TD002",  # todo
  "TD003",  # todo
  "FIX002", # todo
]

[tool.ruff.lint.per-file-ignores]
"*test*" = [
  "D",       # pydocstyle
  "ANN",     # tests don't have to use annotations
  "S101",    # allow assert statements in test cases
  "PLR0913", # tests can use many arguments for fixtures
  "PLR2004", # magic-value-comparison
  "SLF001",  # tests can access private members
  "ARG001",  # tests can have unused arguments
  "ARG002",  # tests can have unused arguments
  "DTZ001",  # allow naive datetime
]
"*/settings/*" = [
  "F403", # star imports
  "F405", # star imports
]
"*/migrations/*" = [
  "RUF012", # mutable-class-default
  "D101",   # Missing docstring in public class
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["apps"]
