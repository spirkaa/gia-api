---
- name: create network
  docker_network:
    name: "{{ app_network }}"
  tags: gia

- name: "{{ gia_db_name }} - start"
  docker_container:
    name: "{{ gia_db_name }}"
    image: "{{ gia_db_image }}"
    pull: yes
    env:
      TZ: "{{ tz }}"
      POSTGRES_HOST: "{{ gia_db_name }}"
      POSTGRES_USER: "{{ gia_db_user }}"
      POSTGRES_PASSWORD: "{{ gia_db_pass }}"
    volumes:
      - "{{ app_path }}/db/data:/var/lib/postgresql/data"
      - "{{ app_path }}/db/backups:/backups"
    networks:
      - name: "{{ app_network }}"
    networks_cli_compatible: yes
    restart_policy: unless-stopped
    state: started
  no_log: true
  tags: gia

- name: "{{ gia_redis_name }} - start"
  docker_container:
    name: "{{ gia_redis_name }}"
    image: "{{ gia_redis_image }}"
    pull: yes
    env:
      TZ: "{{ tz }}"
    volumes:
      - "{{ app_path }}/redis/data:/data"
    networks:
      - name: "{{ app_network }}"
    networks_cli_compatible: yes
    restart_policy: unless-stopped
    state: started
  tags: gia

- name: "{{ gia_api_name }} - pull image"
  docker_image:
    name: "{{ gia_api_image }}"
    source: pull
    force_source: yes
    state: present
  register: pull_image
  tags: gia

- name: "{{ gia_api_name }} - backup database"
  command: docker exec {{ gia_db_name }} backup
  when: pull_image.changed  # noqa 503
  ignore_errors: yes
  tags: gia

- name: "{{ gia_api_name }} - start"
  docker_container:
    name: "{{ gia_api_name }}"
    image: "{{ gia_api_image }}"
    pull: no
    ports:
      - "{{ gia_api_port }}:5000"
    env:
      TZ: "{{ tz }}"
      DJANGO_CACHE_URL: "{{ gia_api_django_cache_url }}"
      DJANGO_DATABASE_URL: "{{ gia_api_django_database_url }}"
      DJANGO_LOG_LEVEL: "{{ gia_api_django_log_level }}"
      DJANGO_SETTINGS_MODULE: "{{ gia_api_django_settings_module }}"
      DJANGO_ALLOWED_HOSTS: "{{ gia_api_django_allowed_hosts }}"
      DJANGO_SECRET_KEY: "{{ gia_api_django_secret_key }}"
      DJANGO_ADMIN_URL: "{{ gia_api_django_admin_url }}"
      DJANGO_ADMIN_MAIL: "{{ gia_api_django_admin_mail }}"
      DJANGO_EMAIL_SUBJECT_PREFIX: "{{ gia_api_django_email_subject_prefix }}"
      DJANGO_EMAIL_HOST: "{{ smtp_host }}"
      DJANGO_EMAIL_HOST_USER: "{{ smtp_user }}"
      DJANGO_EMAIL_HOST_PASSWORD: "{{ smtp_pass }}"
      PROMETHEUS_MULTIPROC_DIR: "{{ gia_api_prometheus_multiproc_dir }}"
    tmpfs:
      - "{{ gia_api_prometheus_multiproc_dir }}"
    networks:
      - name: "{{ app_network }}"
    networks_cli_compatible: yes
    restart_policy: unless-stopped
    state: started
  notify: "{{ gia_api_name }} - invalidate cache"
  no_log: true
  tags: gia

- name: "{{ gia_front_name }} - start"
  docker_container:
    name: "{{ gia_front_name }}"
    image: "{{ gia_front_image }}"
    pull: yes
    ports:
      - "{{ gia_front_port }}:80"
    env:
      TZ: "{{ tz }}"
    networks:
      - name: "{{ app_network }}"
    networks_cli_compatible: yes
    restart_policy: unless-stopped
    state: started
  tags: gia
